from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from brp.bewoning_api.models.base_model import Model
from brp.bewoning_api.models.geboorte_basis import GeboorteBasis
from brp.bewoning_api.models.naam import Naam
import re
from brp.bewoning_api import util

from brp.bewoning_api.models.geboorte_basis import GeboorteBasis  # noqa: E501
from brp.bewoning_api.models.naam import Naam  # noqa: E501
import re  # noqa: E501

class Bewoner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, burgerservicenummer=None, geheimhouding_persoonsgegevens=None, in_onderzoek=None, naam=None, geboorte=None):  # noqa: E501
        """Bewoner - a model defined in OpenAPI

        :param burgerservicenummer: The burgerservicenummer of this Bewoner.  # noqa: E501
        :type burgerservicenummer: str
        :param geheimhouding_persoonsgegevens: The geheimhouding_persoonsgegevens of this Bewoner.  # noqa: E501
        :type geheimhouding_persoonsgegevens: bool
        :param in_onderzoek: The in_onderzoek of this Bewoner.  # noqa: E501
        :type in_onderzoek: bool
        :param naam: The naam of this Bewoner.  # noqa: E501
        :type naam: Naam
        :param geboorte: The geboorte of this Bewoner.  # noqa: E501
        :type geboorte: GeboorteBasis
        """
        self.openapi_types = {
            'burgerservicenummer': str,
            'geheimhouding_persoonsgegevens': bool,
            'in_onderzoek': bool,
            'naam': Naam,
            'geboorte': GeboorteBasis
        }

        self.attribute_map = {
            'burgerservicenummer': 'burgerservicenummer',
            'geheimhouding_persoonsgegevens': 'geheimhoudingPersoonsgegevens',
            'in_onderzoek': 'inOnderzoek',
            'naam': 'naam',
            'geboorte': 'geboorte'
        }

        self._burgerservicenummer = burgerservicenummer
        self._geheimhouding_persoonsgegevens = geheimhouding_persoonsgegevens
        self._in_onderzoek = in_onderzoek
        self._naam = naam
        self._geboorte = geboorte

    @classmethod
    def from_dict(cls, dikt) -> 'Bewoner':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Bewoner of this Bewoner.  # noqa: E501
        :rtype: Bewoner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def burgerservicenummer(self) -> str:
        """Gets the burgerservicenummer of this Bewoner.


        :return: The burgerservicenummer of this Bewoner.
        :rtype: str
        """
        return self._burgerservicenummer

    @burgerservicenummer.setter
    def burgerservicenummer(self, burgerservicenummer: str):
        """Sets the burgerservicenummer of this Bewoner.


        :param burgerservicenummer: The burgerservicenummer of this Bewoner.
        :type burgerservicenummer: str
        """
        if burgerservicenummer is not None and not re.search(r'^[0-9]{9}$', burgerservicenummer):  # noqa: E501
            raise ValueError(r"Invalid value for `burgerservicenummer`, must be a follow pattern or equal to `/^[0-9]{9}$/`")  # noqa: E501

        self._burgerservicenummer = burgerservicenummer

    @property
    def geheimhouding_persoonsgegevens(self) -> bool:
        """Gets the geheimhouding_persoonsgegevens of this Bewoner.

        Indicatie dat persoonsgegevens niet mogen worden verstrekt aan derden / maatschappelijke instellingen.   # noqa: E501

        :return: The geheimhouding_persoonsgegevens of this Bewoner.
        :rtype: bool
        """
        return self._geheimhouding_persoonsgegevens

    @geheimhouding_persoonsgegevens.setter
    def geheimhouding_persoonsgegevens(self, geheimhouding_persoonsgegevens: bool):
        """Sets the geheimhouding_persoonsgegevens of this Bewoner.

        Indicatie dat persoonsgegevens niet mogen worden verstrekt aan derden / maatschappelijke instellingen.   # noqa: E501

        :param geheimhouding_persoonsgegevens: The geheimhouding_persoonsgegevens of this Bewoner.
        :type geheimhouding_persoonsgegevens: bool
        """

        self._geheimhouding_persoonsgegevens = geheimhouding_persoonsgegevens

    @property
    def in_onderzoek(self) -> bool:
        """Gets the in_onderzoek of this Bewoner.

        Geeft aan dat de verblijfplaats in onderzoek is.   # noqa: E501

        :return: The in_onderzoek of this Bewoner.
        :rtype: bool
        """
        return self._in_onderzoek

    @in_onderzoek.setter
    def in_onderzoek(self, in_onderzoek: bool):
        """Sets the in_onderzoek of this Bewoner.

        Geeft aan dat de verblijfplaats in onderzoek is.   # noqa: E501

        :param in_onderzoek: The in_onderzoek of this Bewoner.
        :type in_onderzoek: bool
        """

        self._in_onderzoek = in_onderzoek

    @property
    def naam(self) -> Naam:
        """Gets the naam of this Bewoner.


        :return: The naam of this Bewoner.
        :rtype: Naam
        """
        return self._naam

    @naam.setter
    def naam(self, naam: Naam):
        """Sets the naam of this Bewoner.


        :param naam: The naam of this Bewoner.
        :type naam: Naam
        """

        self._naam = naam

    @property
    def geboorte(self) -> GeboorteBasis:
        """Gets the geboorte of this Bewoner.


        :return: The geboorte of this Bewoner.
        :rtype: GeboorteBasis
        """
        return self._geboorte

    @geboorte.setter
    def geboorte(self, geboorte: GeboorteBasis):
        """Sets the geboorte of this Bewoner.


        :param geboorte: The geboorte of this Bewoner.
        :type geboorte: GeboorteBasis
        """

        self._geboorte = geboorte
